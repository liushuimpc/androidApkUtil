commit 90f19efc0442c8133feb4467e16ee
Author: Marco.Li <lizidong.marco@qq.com>
Date:   2021-08-23T10:06:27+08:00

    [Scope]:
        frameworks/base/
        vendor/mediatek/proprietary/packages/apps/SettingsProvider/
        vendor/mediatek/proprietary/packages/apps/MtkSettings/
    
    [Cause Description]:
        It's required to support the inverse rotation 180° on portrait pose of the screen
    
    [Total Solution]:
        Add SettingsProvider System.ALLOW_ALL_ROTATION to control this feature
    
    [Testing Proposal]:
        Condition: This feature is based on accelerometer rotation is enabled.
    
        Settings -> Display -> Allow all rotations

diff --git a/res/values-zh-rCN/strings.xml b/res/values-zh-rCN/strings.xml
index 869821fb4c..65f4e5b1a2 100644
--- a/res/values-zh-rCN/strings.xml
+++ b/res/values-zh-rCN/strings.xml
@@ -4219,4 +4219,9 @@
+
+    <string name="all_rotation_title">允许所有旋转方向</string>
+    <string name="all_rotation_summary">包含翻转屏幕</string>
+    <!-- List of synonyms for the allow all rotations (rotate the virtual display when the device rotates) setting, used to match in settings search [CHAR LIMIT=NONE] -->
+    <string name="keywords_all_rotation">允许, 所有, 旋转, 翻转, 侧向, 倒立, 方向, 垂直, 水平, 180</string>
 </resources>
diff --git a/res/values/strings.xml b/res/values/strings.xml
index 12174812d4..06aeacf4c9 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -10153,4 +10153,9 @@
+    <string name="all_rotation_title">Allow all rotations</string>
+    <string name="all_rotation_summary">Includes flip screen</string>
+    <!-- List of synonyms for the allow all rotations (rotate the virtual display when the device rotates) setting, used to match in settings search [CHAR LIMIT=NONE] -->
+    <string name="keywords_all_rotation">allow, all, rotate, flip, rotation, portrait, landscape, orientation, vertical, horizontal, 180</string>
+
 </resources>
diff --git a/res/xml/display_settings.xml b/res/xml/display_settings.xml
index df3169dcba..9c40ed5db7 100644
--- a/res/xml/display_settings.xml
+++ b/res/xml/display_settings.xml
@@ -79,6 +79,13 @@
         settings:keywords="@string/keywords_auto_rotate"
         settings:controller="com.android.settings.display.AutoRotatePreferenceController"/>
 
+    <SwitchPreference
+        android:key="allow_all_rotate"
+        android:title="@string/all_rotation_title"
+        android:summary="@string/all_rotation_summary"
+        settings:keywords="@string/keywords_all_rotation"
+        settings:controller="com.android.settings.display.AllowAllRotationPreferenceController"/>
+
     <Preference
         android:key="color_mode"
         android:title="@string/color_mode_title"
diff --git a/src/com/android/settings/display/AllowAllRotationPreferenceController.java b/src/com/android/settings/display/AllowAllRotationPreferenceController.java
new file mode 100644
index 0000000000..233b1b7e9d
--- /dev/null
+++ b/src/com/android/settings/display/AllowAllRotationPreferenceController.java
@@ -0,0 +1,83 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
+ * except in compliance with the License. You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software distributed under the
+ * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+package com.android.settings.display;
+
+import android.content.Context;
+import android.provider.Settings;
+import android.support.v7.preference.Preference;
+import android.text.TextUtils;
+import android.util.Log;
+
+import com.android.settings.core.PreferenceControllerMixin;
+import com.android.settings.core.TogglePreferenceController;
+import com.android.settings.overlay.FeatureFactory;
+import com.android.settingslib.core.instrumentation.MetricsFeatureProvider;
+import com.android.settingslib.core.lifecycle.LifecycleObserver;
+import com.android.settingslib.core.lifecycle.events.OnPause;
+import com.android.settingslib.core.lifecycle.events.OnResume;
+
+import static android.provider.Settings.System.ALLOW_ALL_ROTATION;
+
+public class AllowAllRotationPreferenceController extends TogglePreferenceController implements
+        PreferenceControllerMixin, Preference.OnPreferenceChangeListener, LifecycleObserver,
+        OnResume, OnPause {
+
+    private static final String TAG = "AllowAllRotationPreferenceController";
+    private static final String KEY_ALLOW_ALL_ROTATE = "allow_all_rotate";
+    private final MetricsFeatureProvider mMetricsFeatureProvider;
+    private Preference mPreference;
+
+    public AllowAllRotationPreferenceController(Context context, String key) {
+        super(context, key);
+        mMetricsFeatureProvider = FeatureFactory.getFactory(context).getMetricsFeatureProvider();
+    }
+
+    @Override
+    public void updateState(Preference preference) {
+        mPreference = preference;
+        super.updateState(preference);
+    }
+
+    @Override
+    public void onResume() {
+    }
+
+    @Override
+    public void onPause() {
+    }
+
+    @Override
+    public int getAvailabilityStatus() {
+        return AVAILABLE;
+    }
+
+    @Override
+    public boolean isSliceable() {
+        return TextUtils.equals(getPreferenceKey(), KEY_ALLOW_ALL_ROTATE);
+    }
+
+    @Override
+    public boolean isChecked() {
+        return Settings.System.getInt(mContext.getContentResolver(),
+                ALLOW_ALL_ROTATION, 0) == 1;
+    }
+
+    @Override
+    public boolean setChecked(boolean isChecked) {
+        boolean allowAllRotation = (Boolean) isChecked;
+        Settings.System.putInt(mContext.getContentResolver(), ALLOW_ALL_ROTATION,
+                allowAllRotation ? 1 : 0);
+        return true;
+    }
+}
